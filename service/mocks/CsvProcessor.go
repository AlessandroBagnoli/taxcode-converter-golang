// Code generated by mockery v2.14.1. DO NOT EDIT.

package mocks

import (
	service "taxcode-converter/service"

	mock "github.com/stretchr/testify/mock"
)

// CsvProcessor is an autogenerated mock type for the CsvProcessor type
type CsvProcessor struct {
	mock.Mock
}

// CityCodesCache provides a mock function with given fields:
func (_m *CsvProcessor) CityCodesCache() map[string]service.CityCSV {
	ret := _m.Called()

	var r0 map[string]service.CityCSV
	if rf, ok := ret.Get(0).(func() map[string]service.CityCSV); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]service.CityCSV)
		}
	}

	return r0
}

// CityPlacesCache provides a mock function with given fields:
func (_m *CsvProcessor) CityPlacesCache() map[service.Place]service.CityCSV {
	ret := _m.Called()

	var r0 map[service.Place]service.CityCSV
	if rf, ok := ret.Get(0).(func() map[service.Place]service.CityCSV); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[service.Place]service.CityCSV)
		}
	}

	return r0
}

type mockConstructorTestingTNewCsvProcessor interface {
	mock.TestingT
	Cleanup(func())
}

// NewCsvProcessor creates a new instance of CsvProcessor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCsvProcessor(t mockConstructorTestingTNewCsvProcessor) *CsvProcessor {
	mock := &CsvProcessor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
